{"version":3,"file":"static/js/314.d9ebeff5.chunk.js","mappings":"4OA0EA,EAtEiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAoCJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACMC,EAAW,SAACC,GAChB,MAEIA,EADFC,OAAUC,EADZ,EACYA,KAAMC,EADlB,EACkBA,MAEL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,EAEf,EACKC,EAAQ,mCAAG,WAAOJ,GAAP,oEACfA,EAAMK,iBADS,UAGTV,EAHS,gCAILW,EAAAA,GAAAA,+BACJf,EACAE,GANS,6CASLa,EAAAA,GAAAA,2BAAuCf,EAAOE,GATzC,yDAYbK,EAAS,KAAMS,QAAQC,MAAM,KAAK,IAZrB,0DAAH,sDAgBd,OACE,iCACE,UAAC,KAAD,YACE,oFACA,iBAAMC,SAAS,WAAWC,QAAS,iDACnC,iBAAMR,KAAK,SAASQ,QAAQ,kCAE9B,kBAAMN,SAAUA,EAAUO,UAAU,YAApC,WACE,kBACET,KAAK,QACLU,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRX,MAAOZ,EACPQ,SAAUA,EACVY,UAAU,eAEZ,kBACET,KAAK,WACLU,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRX,MAAOV,EACPM,SAAUA,EACVY,UAAU,eAEZ,kBACEC,KAAK,SACLT,MAAOR,EAAa,2BAAS,qBAC7BgB,UAAU,mCAEXd,IAAS,iBAAMc,UAAU,YAAhB,SAA6Bd,QAEzC,iBAAMkB,QAlCY,kBAAMnB,GAAc,SAACoB,GAAD,OAAWA,CAAX,GAApB,EAkCYL,UAAU,aAAxC,SACGhB,EAAa,qBAAQ,+BAI7B,E,oBCxBD,EA3Ca,SAAC,GAAoB,IAAlBsB,EAAiB,EAAjBA,WACRC,GAAWC,EAAAA,EAAAA,MACbF,GACFC,EAAS,KAEX,IAAME,EAAa,mCAAG,WAAOpB,GAAP,+EAKP,YAHDE,EACRF,EADFC,OAAUC,MAIVmB,EAAW,IAAIC,EAAAA,GAAAA,KAAAA,mBACG,aAATpB,IACTmB,EAAW,IAAIC,EAAAA,GAAAA,KAAAA,sBARG,SAUdhB,EAAAA,GAAAA,gBAA4Be,GAVd,2CAAH,sDAanB,OACE,oBAASV,UAAU,qBAAnB,UACE,iBAAKA,UAAU,qBAAf,WACE,SAAC,EAAD,KACA,iBAAKA,UAAU,WAAf,WACE,oBACEI,QAASK,EACTlB,KAAK,SACLS,UAAU,oBAHZ,qBAKS,SAAC,IAAD,CAAiBY,KAAMC,EAAAA,UAEhC,oBACET,QAASK,EACTlB,KAAK,WACLS,UAAU,oBAHZ,uBAKW,SAAC,IAAD,CAAiBY,KAAME,EAAAA,gBAM3C,C","sources":["components/AuthForm.js","routes/Auth.js"],"sourcesContent":["import { authService } from \"fbase\";\nimport { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message.split(\":\")[1]);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <Helmet>\n        <title>로그인/회원가입 - Weaco</title>\n        <meta property=\"og:title\" content={\"로그인/회원가입\"} />\n        <meta name=\"og:url\" content=\"https://weaco.co.kr/login\" />\n      </Helmet>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"회원가입\" : \"로그인\"}\n          className=\"commonBtn authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"로그인\" : \"회원가입\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport { faGoogle, faFacebook } from \"@fortawesome/free-brands-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Auth = ({ isLoggedIn }) => {\n  const navigate = useNavigate();\n  if (isLoggedIn) {\n    navigate(\"/\");\n  }\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"facebook\") {\n      provider = new firebaseInstance.auth.FacebookAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <section className=\"wrapContainer dark\">\n      <div className=\"authContainer dark\">\n        <AuthForm />\n        <div className=\"authBtns\">\n          <button\n            onClick={onSocialClick}\n            name=\"google\"\n            className=\"commonBtn authBtn\"\n          >\n            Google <FontAwesomeIcon icon={faGoogle} />\n          </button>\n          <button\n            onClick={onSocialClick}\n            name=\"facebook\"\n            className=\"commonBtn authBtn\"\n          >\n            Facebook <FontAwesomeIcon icon={faFacebook} />\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Auth;\n"],"names":["useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","authService","message","split","property","content","className","type","placeholder","required","onClick","prev","isLoggedIn","navigate","useNavigate","onSocialClick","provider","firebaseInstance","icon","faGoogle","faFacebook"],"sourceRoot":""}